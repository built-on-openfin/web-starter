{"version":3,"file":"fdc3-view.bundle.js","mappings":";;;;;;;;;;;AAEA,MAAM,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,KAAK,IAAI,EAAE;IACtD,MAAM,aAAa,EAAE,CAAC;AACvB,CAAC,CAAC,CAAC;AAEH;;GAEG;AACH,KAAK,UAAU,gBAAgB;IAC9B,MAAM,WAAW,GAAG,iBAAiB,CAAC;IACtC,MAAM,WAAW,GAAG,OAAO,CAAC;IAC5B,MAAM,MAAM,GAAG;QACd,MAAM,EAAE,MAAM;KACd,CAAC;IACF,MAAM,OAAO,GAAG;QACf,IAAI,EAAE,WAAW;QACjB,IAAI,EAAE,WAAW;QACjB,EAAE,EAAE,MAAM;KACV,CAAC;IACF,IAAI,MAAM,CAAC,IAAI,EAAE,CAAC;QACjB,MAAM,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QACrC,OAAO,CAAC,GAAG,CAAC,wBAAwB,WAAW,MAAM,WAAW,EAAE,CAAC,CAAC;IACrE,CAAC;SAAM,CAAC;QACP,MAAM,CAAC,gBAAgB,CAAC,WAAW,EAAE,KAAK,IAAI,EAAE;YAC/C,MAAM,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;YACrC,OAAO,CAAC,GAAG,CAAC,wBAAwB,WAAW,MAAM,WAAW,EAAE,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;IACJ,CAAC;AACF,CAAC;AAED;;GAEG;AACH,KAAK,UAAU,eAAe;IAC7B,IAAI,MAAM,CAAC,IAAI,EAAE,CAAC;QACjB,MAAM,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC,OAAO,EAAE,EAAE;YACtD,iBAAiB,CAAC,OAAO,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACJ,CAAC;SAAM,CAAC;QACP,MAAM,CAAC,gBAAgB,CAAC,WAAW,EAAE,KAAK,IAAI,EAAE;YAC/C,MAAM,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC,OAAO,EAAE,EAAE;gBACtD,iBAAiB,CAAC,OAAO,CAAC,CAAC;YAC5B,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACJ,CAAC;AACF,CAAC;AAED;;;GAGG;AACH,SAAS,iBAAiB,CAAC,OAAgB;IAC1C,MAAM,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAkB,cAAc,CAAC,CAAC;IAChF,MAAM,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAkB,cAAc,CAAC,CAAC;IAChF,MAAM,cAAc,GAAG,QAAQ,CAAC,aAAa,CAAiB,cAAc,CAAC,CAAC;IAE9E,IAAI,eAAe,KAAK,IAAI,IAAI,eAAe,KAAK,IAAI,IAAI,cAAc,KAAK,IAAI,EAAE,CAAC;QACrF,eAAe,CAAC,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC;QAC3C,eAAe,CAAC,WAAW,GAAG,OAAO,CAAC,IAAI,IAAI,mBAAmB,CAAC;QAClE,cAAc,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IAC/D,CAAC;AACF,CAAC;AAED;;GAEG;AACH,KAAK,UAAU,aAAa;IAC3B,MAAM,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAoB,YAAY,CAAC,CAAC;IAEhF,IAAI,eAAe,KAAK,IAAI,EAAE,CAAC;QAC9B,eAAe,CAAC,gBAAgB,CAAC,OAAO,EAAE,KAAK,IAAI,EAAE;YACpD,MAAM,gBAAgB,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,MAAM,eAAe,EAAE,CAAC;AACzB,CAAC","sources":["webpack://openfin-web--client-web-api/./client/src/content/fdc3-view.ts"],"sourcesContent":["import type { Context } from \"@finos/fdc3\";\n\nwindow.addEventListener(\"DOMContentLoaded\", async () => {\n\tawait initializeDOM();\n});\n\n/**\n * Broadcasts a context using FDC3.\n */\nasync function broadcastContext(): Promise<void> {\n\tconst contextType = \"fdc3.instrument\";\n\tconst contextName = \"Apple\";\n\tconst idData = {\n\t\tticker: \"AAPL\"\n\t};\n\tconst context = {\n\t\ttype: contextType,\n\t\tname: contextName,\n\t\tid: idData\n\t};\n\tif (window.fdc3) {\n\t\tawait window.fdc3.broadcast(context);\n\t\tconsole.log(`Broadcasted context: ${contextType} - ${contextName}`);\n\t} else {\n\t\twindow.addEventListener(\"fdc3Ready\", async () => {\n\t\t\tawait window.fdc3.broadcast(context);\n\t\t\tconsole.log(`Broadcasted context: ${contextType} - ${contextName}`);\n\t\t});\n\t}\n}\n\n/**\n * Adds an FDC3 context listener to the window.\n */\nasync function addFDC3Listener(): Promise<void> {\n\tif (window.fdc3) {\n\t\tawait window.fdc3.addContextListener(null, (context) => {\n\t\t\tupdateDOMElements(context);\n\t\t});\n\t} else {\n\t\twindow.addEventListener(\"fdc3Ready\", async () => {\n\t\t\tawait window.fdc3.addContextListener(null, (context) => {\n\t\t\t\tupdateDOMElements(context);\n\t\t\t});\n\t\t});\n\t}\n}\n\n/**\n * Updates the DOM elements with the provided context.\n * @param context The context to update the DOM elements with.\n */\nfunction updateDOMElements(context: Context): void {\n\tconst contextTypeSpan = document.querySelector<HTMLSpanElement>(\"#contextType\");\n\tconst contextNameSpan = document.querySelector<HTMLSpanElement>(\"#contextName\");\n\tconst contextBodyPre = document.querySelector<HTMLPreElement>(\"#contextBody\");\n\n\tif (contextTypeSpan !== null && contextNameSpan !== null && contextBodyPre !== null) {\n\t\tcontextTypeSpan.textContent = context.type;\n\t\tcontextNameSpan.textContent = context.name ?? \"No name provided.\";\n\t\tcontextBodyPre.textContent = JSON.stringify(context, null, 2);\n\t}\n}\n\n/**\n * Initialize the DOM elements.\n */\nasync function initializeDOM(): Promise<void> {\n\tconst broadcastButton = document.querySelector<HTMLButtonElement>(\"#broadcast\");\n\n\tif (broadcastButton !== null) {\n\t\tbroadcastButton.addEventListener(\"click\", async () => {\n\t\t\tawait broadcastContext();\n\t\t});\n\t}\n\n\tawait addFDC3Listener();\n}\n"],"names":[],"sourceRoot":""}