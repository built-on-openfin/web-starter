{"version":3,"file":"settings-dialog.bundle.js","mappings":";;;;;;;;;;;;;AAGA;;;GAGG;AACI,KAAK,UAAU,WAAW;IAChC,MAAM,aAAa,GAAG,MAAM,gBAAgB,EAAE,CAAC;IAC/C,IAAI,aAAa,EAAE,CAAC;QACnB,OAAO,aAAa,CAAC;IACtB,CAAC;IACD,MAAM,QAAQ,GAAG,MAAM,mBAAmB,EAAE,CAAC;IAC7C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,gBAAgB,EAAE,SAAS,CAAC,EAAE,CAAC;QAC3D,OAAO,CAAC,KAAK,CACZ,6MAA6M,CAC7M,CAAC;QACF,OAAO;IACR,CAAC;IACD,MAAM,gBAAgB,GAAG,QAAQ,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,CAChE,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,EAAE,KAAK,mBAAmB,CACjD,CAAC;IAEF,IACC,gBAAgB,KAAK,SAAS;QAC9B,gBAAgB,CAAC,IAAI,KAAK,OAAO;QACjC,gBAAgB,CAAC,OAAO,CAAC,MAAM,KAAK,KAAK;QACzC,gBAAgB,CAAC,OAAO,CAAC,GAAG,KAAK,SAAS,EACzC,CAAC;QACF,OAAO,CAAC,KAAK,CACZ,iOAAiO,CACjO,CAAC;QACF,OAAO;IACR,CAAC;IACD,MAAM,gBAAgB,GAAG,MAAM,KAAK,CAAC,gBAAgB,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;IACpE,MAAM,YAAY,GAAG,CAAC,MAAM,gBAAgB,CAAC,IAAI,EAAE,CAAa,CAAC;IACjE,OAAO,YAAY,CAAC;AACrB,CAAC;AA9BD,kCA8BC;AAED;;;GAGG;AACI,KAAK,UAAU,gBAAgB;IACrC,MAAM,QAAQ,GAAG,MAAM,WAAW,EAAE,CAAC;IACrC,IAAI,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,aAAa,KAAK,SAAS,EAAE,CAAC;QAC7D,OAAO,CAAC,KAAK,CACZ,kIAAkI,CAClI,CAAC;QACF,OAAO;IACR,CAAC;IACD,IAAI,OAAO,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,aAAa,KAAK,QAAQ,EAAE,CAAC;QAChE,MAAM,cAAc,GAAG,MAAM,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QAC3E,MAAM,UAAU,GAAG,CAAC,MAAM,cAAc,CAAC,IAAI,EAAE,CAAsB,CAAC;QACtE,OAAO,UAAU,CAAC;IACnB,CAAC;IACD,OAAO,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,aAAa,CAAC;AAC/C,CAAC;AAdD,4CAcC;AAED;;;GAGG;AACH,KAAK,UAAU,mBAAmB;IACjC,wBAAwB;IACxB,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAkB,sBAAsB,CAAC,CAAC;IAC7E,IAAI,IAAI,KAAK,IAAI,EAAE,CAAC;QACnB,MAAM,gBAAgB,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChD,MAAM,YAAY,GAAG,CAAC,MAAM,gBAAgB,CAAC,IAAI,EAAE,CAA0C,CAAC;QAC9F,OAAO,YAAY,CAAC,eAAe,CAAC;IACrC,CAAC;AACF,CAAC;AAED;;;GAGG;AACI,KAAK,UAAU,aAAa;IAClC,MAAM,UAAU,GAAG,kBAAkB,EAAE,CAAC;IACxC,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;AACrC,CAAC;AAHD,sCAGC;AAED;;;GAGG;AACI,KAAK,UAAU,YAAY,CAAC,QAAkB;IACpD,MAAM,UAAU,GAAG,kBAAkB,EAAE,CAAC;IACxC,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC5D,CAAC;AAHD,oCAGC;AAED;;;GAGG;AACH,KAAK,UAAU,gBAAgB;IAC9B,MAAM,UAAU,GAAG,kBAAkB,EAAE,CAAC;IACxC,MAAM,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IAClD,IAAI,QAAQ,KAAK,IAAI,EAAE,CAAC;QACvB,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAC7B,CAAC;AACF,CAAC;AAED;;;GAGG;AACH,SAAS,kBAAkB;IAC1B,MAAM,SAAS,GAAG,IAAI,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC9D,MAAM,GAAG,GAAG,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAEjC,MAAM,WAAW,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,WAAW,CAAC,CAAC,CAAC,UAAU,CAAC;IACzD,OAAO,WAAW,CAAC;AACpB,CAAC;;;;;;;UCjHD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;;;;ACtBA,wGAAmD;AAEnD,MAAM,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,KAAK,IAAI,EAAE;IACtD,IAAI,MAAM,CAAC,IAAI,EAAE,CAAC;QACjB,MAAM,IAAI,EAAE,CAAC;IACd,CAAC;SAAM,CAAC;QACP,MAAM,CAAC,gBAAgB,CAAC,WAAW,EAAE,KAAK,IAAI,EAAE;YAC/C,MAAM,IAAI,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;IACJ,CAAC;AACF,CAAC,CAAC,CAAC;AAEH;;GAEG;AACH,KAAK,UAAU,IAAI;IAClB,MAAM,QAAQ,GAAG,MAAM,0BAAW,GAAE,CAAC;IACrC,IAAI,QAAQ,KAAK,SAAS,EAAE,CAAC;QAC5B,OAAO,CAAC,KAAK,CACZ,yOAAyO,CACzO,CAAC;QACF,OAAO;IACR,CAAC;IAED,oBAAoB;IACpB,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAmB,QAAQ,CAAC,CAAC;IACjE,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAmB,WAAW,CAAC,CAAC;IACvE,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAmB,OAAO,CAAC,CAAC;IAE/D,iBAAiB;IACjB,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAmB,SAAS,CAAC,CAAC;IACnE,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAmB,WAAW,CAAC,CAAC;IACvE,MAAM,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAmB,aAAa,CAAC,CAAC;IAC3E,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAmB,WAAW,CAAC,CAAC;IACvE,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAmB,WAAW,CAAC,CAAC;IACvE,MAAM,iBAAiB,GAAG,QAAQ,CAAC,aAAa,CAAmB,oBAAoB,CAAC,CAAC;IAEzF,MAAM,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAoB,OAAO,CAAC,CAAC;IACtE,MAAM,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAoB,QAAQ,CAAC,CAAC;IACxE,MAAM,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAoB,SAAS,CAAC,CAAC;IAE1E,+CAA+C;IAC/C,IACC,KAAK,KAAK,IAAI;QACd,QAAQ,KAAK,IAAI;QACjB,IAAI,KAAK,IAAI;QACb,MAAM,KAAK,IAAI;QACf,QAAQ,KAAK,IAAI;QACjB,UAAU,KAAK,IAAI;QACnB,QAAQ,KAAK,IAAI;QACjB,QAAQ,KAAK,IAAI;QACjB,iBAAiB,KAAK,IAAI;QAC1B,UAAU,KAAK,IAAI;QACnB,WAAW,KAAK,IAAI;QACpB,YAAY,KAAK,IAAI,EACpB,CAAC;QACF,OAAO,CAAC,KAAK,CAAC,mEAAmE,CAAC,CAAC;QACnF,OAAO;IACR,CAAC;IAED,KAAK,CAAC,KAAK,GAAG,QAAQ,EAAE,QAAQ,EAAE,EAAE,EAAE,KAAK,CAAC;IAC5C,QAAQ,CAAC,KAAK,GAAG,QAAQ,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,CAAC;IAClD,IAAI,CAAC,KAAK,GAAG,QAAQ,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,CAAC;IAC1C,MAAM,CAAC,KAAK,GAAG,QAAQ,EAAE,QAAQ,CAAC,YAAY,EAAE,aAAa,EAAE,MAAM,CAAC;IACtE,QAAQ,CAAC,KAAK,GAAG,QAAQ,EAAE,QAAQ,CAAC,YAAY,EAAE,aAAa,EAAE,QAAQ,CAAC;IAC1E,UAAU,CAAC,KAAK,GAAG,QAAQ,EAAE,QAAQ,CAAC,YAAY,EAAE,aAAa,EAAE,UAAU,CAAC;IAC9E,QAAQ,CAAC,KAAK,GAAG,QAAQ,EAAE,QAAQ,CAAC,YAAY,EAAE,aAAa,EAAE,GAAG,CAAC;IACrE,QAAQ,CAAC,KAAK,GAAG,QAAQ,EAAE,QAAQ,CAAC,YAAY,EAAE,aAAa,CAAC,QAAQ,IAAI,EAAE,CAAC;IAC/E,iBAAiB,CAAC,KAAK,GAAG,QAAQ,EAAE,QAAQ,CAAC,YAAY,EAAE,aAAa,CAAC,iBAAiB,IAAI,EAAE,CAAC;IAEjG,MAAM,OAAO,GAAG,0BAA0B,CAAC;IAC3C,MAAM,UAAU,GAAG,MAAM,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;IAEjE,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,KAAK,IAAI,EAAE;QAC/C,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QACzC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC;QAC/C,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;QACvC,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC,aAAa,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC;QACnE,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC,aAAa,CAAC,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC;QACvE,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC,aAAa,CAAC,UAAU,GAAG,UAAU,CAAC,KAAK,CAAC;QAC3E,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC,aAAa,CAAC,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC;QAClE,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC,aAAa,CAAC,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC;QACvE,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC,aAAa,CAAC,iBAAiB,GAAG,iBAAiB,CAAC,KAAK,CAAC;QAEzF,sCAAsC;QACtC,MAAM,UAAU,CAAC,SAAS,CAAC;YAC1B,IAAI,EAAE,iCAAiC;YACvC,EAAE,EAAE,EAAE,MAAM,EAAE,aAAa,EAAE;YAC7B,QAAQ;SACR,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,WAAW,CAAC,gBAAgB,CAAC,OAAO,EAAE,KAAK,IAAI,EAAE;QAChD,sCAAsC;QACtC,MAAM,UAAU,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,iCAAiC,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,cAAc,EAAE,EAAE,CAAC,CAAC;IACzG,CAAC,CAAC,CAAC;IAEH,YAAY,CAAC,gBAAgB,CAAC,OAAO,EAAE,KAAK,IAAI,EAAE;QACjD,sCAAsC;QACtC,MAAM,UAAU,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,iCAAiC,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;IAClG,CAAC,CAAC,CAAC;AACJ,CAAC","sources":["webpack://openfin-web--web-interop-support-context-and-intents/./client/src/platform/settings.ts","webpack://openfin-web--web-interop-support-context-and-intents/webpack/bootstrap","webpack://openfin-web--web-interop-support-context-and-intents/./client/src/content/settings-dialog.ts"],"sourcesContent":["import type { WebLayoutSnapshot } from \"@openfin/core-web\";\nimport type { ManifestSettings, Settings } from \"../shapes/setting-shapes\";\n\n/**\n * Fetches the settings for the application.\n * @returns The settings for the application.\n */\nexport async function getSettings(): Promise<Settings | undefined> {\n\tconst savedSettings = await getSavedSettings();\n\tif (savedSettings) {\n\t\treturn savedSettings;\n\t}\n\tconst settings = await getManifestSettings();\n\tif (!Array.isArray(settings?.endpointProvider?.endpoints)) {\n\t\tconsole.error(\n\t\t\t\"Unable to run the example as settings are required and we fetch them from the link web manifest from the html page that is being served. It should exist in the customSettings section of the web manifest.\"\n\t\t);\n\t\treturn;\n\t}\n\tconst settingsEndpoint = settings.endpointProvider.endpoints.find(\n\t\t(endpoint) => endpoint.id === \"platform-settings\"\n\t);\n\n\tif (\n\t\tsettingsEndpoint === undefined ||\n\t\tsettingsEndpoint.type !== \"fetch\" ||\n\t\tsettingsEndpoint.options.method !== \"GET\" ||\n\t\tsettingsEndpoint.options.url === undefined\n\t) {\n\t\tconsole.error(\n\t\t\t\"Unable to run the example as settings are required and we fetch them from the endpoint defined with the id: 'platform-settings' in the manifest. It needs to be of type fetch, performing a GET and it must have a url defined.\"\n\t\t);\n\t\treturn;\n\t}\n\tconst platformSettings = await fetch(settingsEndpoint?.options.url);\n\tconst settingsJson = (await platformSettings.json()) as Settings;\n\treturn settingsJson;\n}\n\n/**\n * Returns a default layout from the settings if provided.\n * @returns The default layout from the settings.\n */\nexport async function getDefaultLayout(): Promise<WebLayoutSnapshot | undefined> {\n\tconst settings = await getSettings();\n\tif (settings?.platform?.layout?.defaultLayout === undefined) {\n\t\tconsole.error(\n\t\t\t\"Unable to run the example as without a layout being defined. Please ensure that settings have been provided in the web manifest.\"\n\t\t);\n\t\treturn;\n\t}\n\tif (typeof settings.platform.layout.defaultLayout === \"string\") {\n\t\tconst layoutResponse = await fetch(settings.platform.layout.defaultLayout);\n\t\tconst layoutJson = (await layoutResponse.json()) as WebLayoutSnapshot;\n\t\treturn layoutJson;\n\t}\n\treturn settings.platform.layout.defaultLayout;\n}\n\n/**\n * Returns the settings from the manifest file.\n * @returns customSettings for this example\n */\nasync function getManifestSettings(): Promise<ManifestSettings | undefined> {\n\t// Get the manifest link\n\tconst link = document.querySelector<HTMLLinkElement>('link[rel=\"manifest\"]');\n\tif (link !== null) {\n\t\tconst manifestResponse = await fetch(link.href);\n\t\tconst manifestJson = (await manifestResponse.json()) as { custom_settings: ManifestSettings };\n\t\treturn manifestJson.custom_settings;\n\t}\n}\n\n/**\n * Clears any saved settings.\n * @returns The saved settings.\n */\nexport async function clearSettings(): Promise<void> {\n\tconst settingsId = getSavedSettingsId();\n\tlocalStorage.removeItem(settingsId);\n}\n\n/**\n * Saves the settings.\n * @param settings The settings to save.\n */\nexport async function saveSettings(settings: Settings): Promise<void> {\n\tconst settingsId = getSavedSettingsId();\n\tlocalStorage.setItem(settingsId, JSON.stringify(settings));\n}\n\n/**\n * Retrieves saved settings from local storage.\n * @returns The saved settings.\n */\nasync function getSavedSettings(): Promise<Settings | undefined> {\n\tconst settingsId = getSavedSettingsId();\n\tconst settings = localStorage.getItem(settingsId);\n\tif (settings !== null) {\n\t\treturn JSON.parse(settings);\n\t}\n}\n\n/**\n * Get the Id used for saving and fetching settings from storage.\n * @returns The settings id.\n */\nfunction getSavedSettingsId(): string {\n\tconst urlParams = new URLSearchParams(window.location.search);\n\tconst env = urlParams.get(\"env\");\n\n\tconst settingsKey = env ? `${env}-settings` : \"settings\";\n\treturn settingsKey;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { getSettings } from \"../platform/settings\";\n\nwindow.addEventListener(\"DOMContentLoaded\", async () => {\n\tif (window.fdc3) {\n\t\tawait init();\n\t} else {\n\t\twindow.addEventListener(\"fdc3Ready\", async () => {\n\t\t\tawait init();\n\t\t});\n\t}\n});\n\n/**\n * Initialize the settings.\n */\nasync function init(): Promise<void> {\n\tconst settings = await getSettings();\n\tif (settings === undefined) {\n\t\tconsole.error(\n\t\t\t\"Unable to run the example as we have been unable to load the web manifest and it's settings from the currently running html page. Please ensure that the web manifest is being served and that it contains the custom_settings section.\"\n\t\t);\n\t\treturn;\n\t}\n\n\t// platform settings\n\tconst title = document.querySelector<HTMLInputElement>(\"#title\");\n\tconst subTitle = document.querySelector<HTMLInputElement>(\"#subTitle\");\n\tconst logo = document.querySelector<HTMLInputElement>(\"#logo\");\n\n\t// cloud settings\n\tconst userId = document.querySelector<HTMLInputElement>(\"#userId\");\n\tconst password = document.querySelector<HTMLInputElement>(\"#password\");\n\tconst platformId = document.querySelector<HTMLInputElement>(\"#platformId\");\n\tconst cloudUrl = document.querySelector<HTMLInputElement>(\"#cloudUrl\");\n\tconst sourceId = document.querySelector<HTMLInputElement>(\"#sourceId\");\n\tconst sourceDisplayName = document.querySelector<HTMLInputElement>(\"#sourceDisplayName\");\n\n\tconst saveButton = document.querySelector<HTMLButtonElement>(\"#save\");\n\tconst resetButton = document.querySelector<HTMLButtonElement>(\"#reset\");\n\tconst cancelButton = document.querySelector<HTMLButtonElement>(\"#cancel\");\n\n\t// assign returned settings to the input fields\n\tif (\n\t\ttitle === null ||\n\t\tsubTitle === null ||\n\t\tlogo === null ||\n\t\tuserId === null ||\n\t\tpassword === null ||\n\t\tplatformId === null ||\n\t\tcloudUrl === null ||\n\t\tsourceId === null ||\n\t\tsourceDisplayName === null ||\n\t\tsaveButton === null ||\n\t\tresetButton === null ||\n\t\tcancelButton === null\n\t) {\n\t\tconsole.error(\"Unable to use settings as there are missing input fields/buttons.\");\n\t\treturn;\n\t}\n\n\ttitle.value = settings?.platform?.ui?.title;\n\tsubTitle.value = settings?.platform?.ui?.subTitle;\n\tlogo.value = settings?.platform?.ui?.logo;\n\tuserId.value = settings?.platform.cloudInterop?.connectParams?.userId;\n\tpassword.value = settings?.platform.cloudInterop?.connectParams?.password;\n\tplatformId.value = settings?.platform.cloudInterop?.connectParams?.platformId;\n\tcloudUrl.value = settings?.platform.cloudInterop?.connectParams?.url;\n\tsourceId.value = settings?.platform.cloudInterop?.connectParams.sourceId ?? \"\";\n\tsourceDisplayName.value = settings?.platform.cloudInterop?.connectParams.sourceDisplayName ?? \"\";\n\n\tconst channel = \"platform/settings/dialog\";\n\tconst appChannel = await window.fdc3.getOrCreateChannel(channel);\n\n\tsaveButton.addEventListener(\"click\", async () => {\n\t\tsettings.platform.ui.title = title.value;\n\t\tsettings.platform.ui.subTitle = subTitle.value;\n\t\tsettings.platform.ui.logo = logo.value;\n\t\tsettings.platform.cloudInterop.connectParams.userId = userId.value;\n\t\tsettings.platform.cloudInterop.connectParams.password = password.value;\n\t\tsettings.platform.cloudInterop.connectParams.platformId = platformId.value;\n\t\tsettings.platform.cloudInterop.connectParams.url = cloudUrl.value;\n\t\tsettings.platform.cloudInterop.connectParams.sourceId = sourceId.value;\n\t\tsettings.platform.cloudInterop.connectParams.sourceDisplayName = sourceDisplayName.value;\n\n\t\t// an example of using an app channel.\n\t\tawait appChannel.broadcast({\n\t\t\ttype: \"platform.settings.dialog.action\",\n\t\t\tid: { action: \"save-reload\" },\n\t\t\tsettings\n\t\t});\n\t});\n\n\tresetButton.addEventListener(\"click\", async () => {\n\t\t// an example of using an app channel.\n\t\tawait appChannel.broadcast({ type: \"platform.settings.dialog.action\", id: { action: \"reset-reload\" } });\n\t});\n\n\tcancelButton.addEventListener(\"click\", async () => {\n\t\t// an example of using an app channel.\n\t\tawait appChannel.broadcast({ type: \"platform.settings.dialog.action\", id: { action: \"close\" } });\n\t});\n}\n"],"names":[],"sourceRoot":""}