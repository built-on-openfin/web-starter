{"version":3,"file":"fdc3-view.bundle.js","mappings":"yBAoDA,SAASA,EAAkBC,GAC1B,MAAMC,EAAkBC,SAASC,cAA+B,gBAC1DC,EAAkBF,SAASC,cAA+B,gBAC1DE,EAAiBH,SAASC,cAA8B,gBAEtC,OAApBF,GAAgD,OAApBG,GAA+C,OAAnBC,IAC3DJ,EAAgBK,YAAcN,EAAQO,KACtCH,EAAgBE,YAAcN,EAAQQ,MAAQ,oBAC9CH,EAAeC,YAAcG,KAAKC,UAAUV,EAAS,KAAM,GAE7D,CA5DAW,OAAOC,iBAAiB,oBAAoBC,gBAiE5CA,iBACC,MAAMC,EAAkBZ,SAASC,cAAiC,cAE1C,OAApBW,GACHA,EAAgBF,iBAAiB,SAASC,gBA9D5CA,iBACC,MAAME,EAAc,kBACdC,EAAc,QAIdhB,EAAU,CACfO,KAAMQ,EACNP,KAAMQ,EACNC,GANc,CACdC,OAAQ,SAOLP,OAAOQ,YACJR,OAAOQ,KAAKC,UAAUpB,GAC5BqB,QAAQC,IAAI,wBAAwBP,OAAiBC,MAErDL,OAAOC,iBAAiB,aAAaC,gBAC9BF,OAAOQ,KAAKC,UAAUpB,GAC5BqB,QAAQC,IAAI,wBAAwBP,OAAiBC,IAAc,GAGtE,CA2CSO,EAAkB,UAtC3BV,iBACKF,OAAOQ,WACJR,OAAOQ,KAAKK,mBAAmB,MAAOxB,IAC3CD,EAAkBC,EAAQ,IAG3BW,OAAOC,iBAAiB,aAAaC,gBAC9BF,OAAOQ,KAAKK,mBAAmB,MAAOxB,IAC3CD,EAAkBC,EAAQ,GACzB,GAGL,CA8BOyB,EACP,CA1EOC,EAAe,G","sources":["webpack://openfin-web--web-client-api/./client/src/content/fdc3-view.ts"],"sourcesContent":["import type { Context } from \"@finos/fdc3\";\n\nwindow.addEventListener(\"DOMContentLoaded\", async () => {\n\tawait initializeDOM();\n});\n\n/**\n * Broadcasts a context using FDC3.\n */\nasync function broadcastContext(): Promise<void> {\n\tconst contextType = \"fdc3.instrument\";\n\tconst contextName = \"Apple\";\n\tconst idData = {\n\t\tticker: \"AAPL\"\n\t};\n\tconst context = {\n\t\ttype: contextType,\n\t\tname: contextName,\n\t\tid: idData\n\t};\n\tif (window.fdc3) {\n\t\tawait window.fdc3.broadcast(context);\n\t\tconsole.log(`Broadcasted context: ${contextType} - ${contextName}`);\n\t} else {\n\t\twindow.addEventListener(\"fdc3Ready\", async () => {\n\t\t\tawait window.fdc3.broadcast(context);\n\t\t\tconsole.log(`Broadcasted context: ${contextType} - ${contextName}`);\n\t\t});\n\t}\n}\n\n/**\n * Adds an FDC3 context listener to the window.\n */\nasync function addFDC3Listener(): Promise<void> {\n\tif (window.fdc3) {\n\t\tawait window.fdc3.addContextListener(null, (context) => {\n\t\t\tupdateDOMElements(context);\n\t\t});\n\t} else {\n\t\twindow.addEventListener(\"fdc3Ready\", async () => {\n\t\t\tawait window.fdc3.addContextListener(null, (context) => {\n\t\t\t\tupdateDOMElements(context);\n\t\t\t});\n\t\t});\n\t}\n}\n\n/**\n * Updates the DOM elements with the provided context.\n * @param context The context to update the DOM elements with.\n */\nfunction updateDOMElements(context: Context): void {\n\tconst contextTypeSpan = document.querySelector<HTMLSpanElement>(\"#contextType\");\n\tconst contextNameSpan = document.querySelector<HTMLSpanElement>(\"#contextName\");\n\tconst contextBodyPre = document.querySelector<HTMLPreElement>(\"#contextBody\");\n\n\tif (contextTypeSpan !== null && contextNameSpan !== null && contextBodyPre !== null) {\n\t\tcontextTypeSpan.textContent = context.type;\n\t\tcontextNameSpan.textContent = context.name ?? \"No name provided.\";\n\t\tcontextBodyPre.textContent = JSON.stringify(context, null, 2);\n\t}\n}\n\n/**\n * Initialize the DOM elements.\n */\nasync function initializeDOM(): Promise<void> {\n\tconst broadcastButton = document.querySelector<HTMLButtonElement>(\"#broadcast\");\n\n\tif (broadcastButton !== null) {\n\t\tbroadcastButton.addEventListener(\"click\", async () => {\n\t\t\tawait broadcastContext();\n\t\t});\n\t}\n\n\tawait addFDC3Listener();\n}\n"],"names":["updateDOMElements","context","contextTypeSpan","document","querySelector","contextNameSpan","contextBodyPre","textContent","type","name","JSON","stringify","window","addEventListener","async","broadcastButton","contextType","contextName","id","ticker","fdc3","broadcast","console","log","broadcastContext","addContextListener","addFDC3Listener","initializeDOM"],"sourceRoot":""}