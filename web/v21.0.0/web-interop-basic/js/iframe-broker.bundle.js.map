{"version":3,"file":"iframe-broker.bundle.js","mappings":"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","sources":["webpack://openfin-web--web-interop-basic/./node_modules/@openfin/core-web/out/iframe-broker.cjs.js","webpack://openfin-web--web-interop-basic/./client/src/platform/settings.ts","webpack://openfin-web--web-interop-basic/webpack/bootstrap","webpack://openfin-web--web-interop-basic/./client/src/platform/iframe-broker.ts"],"sourcesContent":["\"use strict\";const e=(e,t)=>{try{return e.origin===t.origin}catch(e){return!1}},t=\"web-broker-ports-ready\",r=\"worker-initialize-connection\",i=\"create-fallback-connection\",o=\"request-fallback-connection\",n=e=>`ack-${e}`,s=new Map([[\"debug\",0],[\"info\",1],[\"warn\",2],[\"error\",3],[\"none\",4]]);class a{static setGlobalLogLevel(e){a.LOG_LEVEL=e??\"error\"}constructor(...e){this.scopes=e}log(e,...t){const r=s.get(e)??3;var i;(s.get(a.LOG_LEVEL)??3)<=r&&console.log(`[${(new Date).toISOString()}]`,...(i=this.scopes,i.map((e=>`[${e}]`))),...t)}warn(...e){this.log(\"warn\",...e)}error(...e){this.log(\"error\",...e)}info(...e){this.log(\"info\",...e)}debug(...e){this.log(\"debug\",...e)}static getLogger(...e){return new a(...e)}getLogger(...e){return new a(...this.scopes,...e)}}a.LOG_LEVEL=\"error\",a.getLogger(\"@openfin/core-web/client\");const c=\"openfin/web-shared-worker\",d=e=>window.top===e;class l{static get lockApi(){return navigator.locks}constructor(e){this.name=e,this.releaseCallback=null,l.pending.add(this),this.lockAcquiredPromise=new Promise(((e,t)=>{this.lockReleasedPromise=l.lockApi.request(this.name,(()=>(l.pending.delete(this),e(),new Promise((e=>{l.held.add(this),this.releaseCallback=e}))))).catch((e=>{throw t(e),e}))}))}async acquired(){await this.lockAcquiredPromise}async release(){if(!this.releaseCallback)throw new Error(`Lock ${this.name} not acquired.`);this.releaseCallback(),this.releaseCallback=null,await this.lockReleasedPromise,l.held.delete(this)}async onReleased(e){if(!this.lockReleasedPromise)throw new Error(`Lock ${this.name} not queued.`);return this.lockReleasedPromise.then(e)}autoRelease(){this.acquired().then((()=>this.release()))}static async releaseAll(){const e=Promise.all([...this.pending].map((async e=>{await e.acquired(),await e.release()})));await Promise.all([...this.held].map((async e=>{await e.release()}))),await e}}l.pending=new Set,l.held=new Set;class h{constructor(e=100,t=2){this.pingIntervalMs=e,this.allowedMissedPings=t,this.lockSelf=async e=>{const t=new l((e=>`__OPENFIN__${e.uuid}_${e.name}`)(e));return await t.acquired(),t}}async lockProxiedConnection(e,t){let r=0;t.addEventListener(\"message\",(e=>{\"pong\"===e.data.topic&&r--}));const i=await this.lockSelf(e);let o=setInterval((()=>{r>=this.allowedMissedPings?(i.release(),clearInterval(o)):(r++,t.postMessage({topic:\"ping\"}))}),this.pingIntervalMs);t.start()}registerProxiedConnection(e){e.addEventListener(\"message\",(t=>{\"ping\"===t.data.topic&&e.postMessage({topic:\"pong\"})})),e.start()}}class w{constructor(t,r,s){this.workerUrl=t,this.iframeWindow=r,this.forceWorker=s,this.identityDisconnectionController=new h,this.isSharedWorkerSupported=()=>!this.forceWorker&&!!window.SharedWorker,this.state=\"ready\",this.establishWorkerConnectionViaWindow=async(t,r)=>{if(e(this.iframeWindow,t)){const e=new MessageChannel,s=new MessageChannel;return this.identityDisconnectionController.registerProxiedConnection(s.port1),new Promise(((a,c)=>{e.port1.addEventListener(\"message\",(t=>{t.data.topic===n(i)&&(t.data.success?a(e.port1):c(t.data.reason))})),e.port1.start();const d={topic:o,payload:{identity:r}};t.postMessage(d,location.origin,[e.port2,s.port2])}))}throw new Error(\"Could not connect via top level browsing context as its origin does not much the web interop broker.\")},this.listenForNestedConnections=t=>{\"top-window\"===this.state&&e(this.iframeWindow,this.iframeWindow.parent)&&this.iframeWindow.parent.addEventListener(\"message\",(async e=>{const{data:r}=e;if(e.origin===location.origin&&r.topic===o){const[o,...n]=e.ports;if(n.length>0&&r.payload?.identity){const[e]=n;await this.identityDisconnectionController.lockProxiedConnection(r.payload.identity,e)}const s={topic:i};t.postMessage(s,[o])}}))},this.initialize=async t=>{if(\"ready\"!==this.state)throw new Error(\"Worker connection already initialized\");return(e=>{const t=r=>!(!(e=>{try{return!e.origin}catch(e){return!0}})(r)&&r.origin===e.origin)||!d(r)&&t(r.parent);return!d(e)&&t(e.parent)})(this.iframeWindow)&&e(this.iframeWindow,this.iframeWindow.top)?this.state=\"partitioned-frame\":d(this.iframeWindow.parent)?this.state=\"top-window\":this.state=\"frame\",this.connect(t)}}async connect(e){if(\"ready\"===this.state)throw new Error(\"Must call initialize before connect\");switch(this.state){case\"partitioned-frame\":return this.establishWorkerConnectionViaWindow(this.iframeWindow.top,e);case\"top-window\":{let t;return t=this.isSharedWorkerSupported()?new SharedWorker(this.workerUrl,c).port:new Worker(this.workerUrl),await this.identityDisconnectionController.lockSelf(e),this.listenForNestedConnections(t),t}case\"frame\":{if(!this.isSharedWorkerSupported())try{return await this.establishWorkerConnectionViaWindow(this.iframeWindow.top,e)}catch(e){throw new Error(`SharedWorker is not supported and an unexpected error occured when trying to connect via fallback mechanism: ${e.message}`,{cause:e})}await this.identityDisconnectionController.lockSelf(e);const{port:t}=new SharedWorker(this.workerUrl,c);return t}default:throw this.state,new Error(`Invalid state: ${this.state}`)}}}const p=a.getLogger(\"@openfin/core-web/iframe-broker\"),g=()=>{const e=((e,t)=>{const r=new RegExp(`^${t}<(?<meta>.*)>$`).exec(e)?.groups?.meta;if(r)try{return JSON.parse(atob(r))}catch(e){throw new Error(`Failed to decode JSON from ${r}.`)}})(window.name,\"of-broker\");if(!e)throw new Error(\"Invalid or missing identity string in iframe context. Ensure that this iframe is being renderered via the @openfin/core-web library.\");return e};function u(e){const r={topic:n(t),success:!1,reason:e?.reason??\"Connection Rejected\"};window.parent.postMessage(r,\"*\")}exports.init=async e=>{try{a.setGlobalLogLevel(e.logLevel??\"error\");const{sharedWorkerUrl:i}=e;await(\"loading\"===document.readyState?new Promise((e=>{const t=()=>{e(),window.removeEventListener(\"DOMContentLoaded\",t)};window.addEventListener(\"DOMContentLoaded\",t)})):Promise.resolve());const o=g(),s=new w(i,window,\"same-site\"!==e.experimental?.crossTab),c=await s.initialize(o);p.info(`Loading ${i} in ${s.state} mode...`);const d=await(async(e,i,o)=>{const s=new MessageChannel,a=new MessageChannel,c={topic:r,payload:{identity:o}};await new Promise(((e,t)=>{i.addEventListener(\"message\",(i=>{i.data.topic===n(r)&&(i.data.success?e():t(new Error(i.data.reason)))})),i.start?.(),i.postMessage(c,[a.port2])}));const d={topic:n(t),success:!0,payload:{identity:o}};return e.postMessage(d,\"*\",[s.port2,a.port1]),s.port1})(window.parent,c,o);d.start(),c.start?.(),p.debug(`Port transfer complete in ${s.state} mode. Connection established with identity ${JSON.stringify(o)}. SharedWorker support=${s.isSharedWorkerSupported()}`)}catch(e){const t=new Error(`An unexpected error occured during initialization. ${e.message}`);u({reason:t.message}),console.error(t)}},exports.rejectConnections=u;\n","import type { Settings } from \"../shapes/setting-shapes\";\n\n/**\n * Fetches the settings for the application.\n * @returns The settings for the application.\n */\nexport async function getSettings(): Promise<Settings> {\n\treturn {\n\t\tplatform: {\n\t\t\tsharedWorkerUrl: \"http://localhost:6060/js/shared-worker.bundle.js\",\n\t\t\tbrokerUrl: \"http://localhost:6060/platform/iframe-broker.html\",\n\t\t\tproviderId: \"web-interop-basic\",\n\t\t\tdefaultContextGroup: \"green\"\n\t\t}\n\t};\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { init as initBrokerConnection } from \"@openfin/core-web/iframe-broker\";\nimport { getSettings } from \"./settings\";\n\n/**\n * Initializes the OpenFin Web Broker connection.\n * @returns A promise that resolves when the connection is established.\n */\nasync function init(): Promise<void> {\n\tconst settings = await getSettings();\n\treturn initBrokerConnection({\n\t\tsharedWorkerUrl: settings.platform.sharedWorkerUrl\n\t});\n}\n\ninit()\n\t.then(() => {\n\t\tconsole.log(\"Connected to the OpenFin IFrame Web Broker.\");\n\t\treturn true;\n\t})\n\t.catch((err) => console.error(err));\n"],"names":[],"sourceRoot":""}